input {
    file {
        path => "C:/elastic_stack/practicing/json_auditing/v2/v2.2/at_v2.2.log"
        start_position => "beginning"
        sincedb_path => "NULL3"
    }
}
# POST /action_hello_23/aokd/34/okaokad
# wd   /kelma/kelmatania/e34
#  /klam/id/klam  w el id momken aw la
filter {
    # First mapping
    dissect {
        mapping => {
            "message" => "%{timestamp} | %{level} | %{request} | %{action} | %{message}"
        }
    }
    # Action mapping
    grok{
        match =>{
             "action" => "(?<base_action>(/[a-zA-Z]+)+)(?<u_id>(/.*){0,1}$)"
            #"action" => "(?<base_action>(/[a-zA-Z]+)+)(?<u_id>(/.*))"
            #"action" => "(?<base_action>(/[a-zA-Z]+)+)(?<u_id>(//.*[0-9]*.*){0,1})"
             #(?<field_name>the pattern here)
        }
    }
    # Begin process base action
    mutate {
         split => { "base_action" => "/" }
    }
    mutate {
        remove_field => ["[base_action][0]"]
    }
    mutate {
       join => { "base_action" => "_" }
    }
    # End process base action
    # Remove / from u_id
    mutate{
        gsub => [ "u_id", "^/", "" ]
    }
    if [u_id] == ""{
        mutate{
            remove_field => ["u_id"]
        }
    }

    # for debugging
    mutate{
        remove_field => ["host","message","@version","request","path","level","timestamp","@timestamp"]
    }
}
output {
    file{
        path =>"C:/elastic_stack/practicing/json_auditing/v2/v2.2/output_minimal_processed.txt"
    }
    stdout{
    }
}